<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAbcAAAJ5CAYAAAAtnX6yAAAABGdBTUEAALGPC/xhBQAAGr1JREFUeF7t
        3e2ZHMXVBmBCeENwCG8GkAFkABlYGeAMIAPIQGSAM5AykDIwGdh9VgxaLWdm57O766n7vq7nj42k3Z6Z
        rqnqU3W+AgAAAAAAAAAAAAAAAAAAAAAAmNLXS75d8uOSn5b8/mc+LPnvBan//vBn6++pv6/+3vr7AeAh
        /m/JYRC7ZvC6NYfB7zDo1c8DABc5DGa/LHm3pBtwtk79XPXzfb/EYAdA6x9L/rlkr4PZa6mfu37++j0A
        mNjoA9qxGOgAJlRLefUMqxsY0lK/Z/2+AASqWUxVIv5nSTcIpKd+7/r9zeYAAnyzpAovuhv+rKnrUdcF
        gMHUzXuWpcdrU9fHIAcwAIPa5THIAexUPUt6u6S7ect5qevnmRzADtQG5iqU6G7Wcl3qetoYDrCR75bM
        Wv346NR1tYUAYEW1dOa52jqp62ypEuDB6uQNs7V1U9e7rjsAd2a2tn3M4gDu6IclZmv7SL0O9XoAcKWq
        2HO6yD5Tr4uKSoAL/f+StNP601KvT71OAJxBif84qdepXi8ATvhxSXcTlX2nXjcAGp6vjZ16/QD4UxUm
        eL6WkXodFZoA06t9Uwa2rNTraT8cMK2qtFM4kpl6XVVSAtMxsOXHAAdMxcA2TwxwwBQMbPPFAAdEM7DN
        GwMcEMnAJgY4IEqVhRvYpFLvA9sEgOHZoC0vY6M3MDQDmxyLAQ4Y1tsl3Y1NpFLvD4Ch/Lyku6GJPE+9
        TwCG8MOS7kYm0qXeLwC7puRfroktAsBuVYHAhyXdzUvkVOp9o8AE2KXfl3Q3LpFzUu8fgF3515LuhiVy
        Sep9BLAL3yzpblRyez4u+fefqcrCuvkf8uuSw//X/dlRU+8ngE15zna/vF9SA9h3S64psKjXogaGGvh+
        W9L9GyPE8zdgczZqX58/ltTsq0rhH3Uzr4Gy/o36t7qfYa+xwRvYjP1s16WWER85oB1T/2bNDrufaY+x
        /w1YnZP+L0/NoPawn6uWLkd4TqeDALA6y5Hnpwa1Pd6ka5Db+0zO8iSwmnqO092I5MvsdVB76c2SPT+T
        q/cbwEPVcyLLkadTs6HRytlrEN7rUmW931RPAg9Vs5HuBiSfZj81CxpZbSPofretU+87gIeo2Uh345FP
        s7WUw3/rdd7jMuVos2FgELpq96nZTpoaqPdWbFLvP4C7quW27oYzc2p2kzybqOdcexvgRl/2BXZEEcnf
        Uzf9GfZg7W2AU1wC3E2dd9jdaGZNFTfMdIPd2wBX70eAm9TspLvBzJpZb6x7G+BmmDUDD6T0/3NmP+uw
        BrhqwdNdm7VjawBwNbO2z3GI7ydVRbmXbQK2BgBXqbb/3U1lthjYvrSX/Y71/gS4yF5uYFvHwNbby0km
        Zm/ARczaDGyv2cNZlGZvwNnquUp3I5kpBrbXVYHJHp6/mb0BZ5m9QtLAdr49tD9SOQm8avYKSTfKy/22
        pLuWa8a+N+CkmWdtdZPmcntYnvSlBDiqblLdjWOG1Okb9ftznT0crO31A1p7bVT56NSsw7LW7baunkxs
        PQTcwYcl3U0jPart7mPrvZH1/gX4QlUIdjeM9Pi2f19bF5eodAW+MOOm7VpG4762rra1qRv4y4zl//Wc
        TQHCY2xdcev5KfBkxmaktfmYx9j6y5JmpsCTat3f3SRS4+b3eFvO3ur9DExuD8cnrZlqtmk58vG2Pp/U
        zBwmN9uJJMr+17PlvjcnlsDEZjuRxHLkurZeFTBDh0nNtLdNdeQ2ahm4ez3WiD1vMKk9nOa+VjyD2caW
        R7o5CBsmNNOSpM3a29l6W4DZOkxmpiVJm3q3teUKgaVJmMwsS5KKSLa35RcpS5Mwme5GkBZFJPuw9RI4
        MIlZNm478X8/tlwpUEwEk5jhLMkqQWc/tvxCZWkaJjFDU1KFBPuy5dKkJqYwgRna25i17dOWS5MqZiHc
        myXdhz8pZm2PV4PFt0t+XPJ2STUJ3XN3iXrfA8HStwCYtT1ODWY/LRlxWduWAAiX3rvNrO2+qnXNL0tG
        f9/o8QbBtu6x9eiYtd3P90tqqbG7zqOm3v9AoPTnbWZtt6uS/dRqWs/dIFTy87Y6jYTr1awmbab2Mp67
        Qajk/W1OI7leVTx21zQt9rtBoPQWN86QvFzN1t4t6a5narxPIMw3S7oPe0J+XcJl6tlaeuVsF+dMQpgt
        OyI/OqrgLjPLMmQXy9cQprpRdx/20fN+CeerPWvddZwlurJDkDoqKXUJSvn/+WYf2CqKSiBI6vM2zUjP
        Z2D7HO8ZCJH6vE0hyXkMbF+mvuwBAWoQ6D7ko0chyetq2ba7djPHSSUQInEvk3MkX1eDf3ftZo/O3BCi
        +4CPHiXdp9VzpeQTaW6JikkIkPrtXWfl06qBaHfdRMUkRKgTGboP+Mixt+20xNf83gEGl1gpqSDgOMuR
        50UxEgwusc2NJcnjko9Zu2dsB4DBpX2LtyR5XM3aZjwM+ZqY/cPgug/2yFEleZxZ2/nxPoKBJR675VlJ
        z6ztsujKDQNLO53Cxu3japmtu2bSx143GFidxNB9sEeNsySPUyF5WQxuMLC0Hm66KPccs3VdgEGlPYPR
        qqSXNkNfK8CAaiDoPtCjxhaA4yxJXhdgQGmVkk5y79WG9u56yeuxkRsGlLbnyfO2nn5t18fgBgNKa1Dq
        eVsvtRHtGjG4wYCSKiU9bzsusRHtWjG4wYC6D/Oo8bztuO56yXkxuMFg0vY9ed7WU0xyW5wvCYNJa1ap
        xU2vZh7d9ZLzYnCDwSRVSv6xhJ6O27fF4AaDSWpQ6vT249K2e6wdgxsMJunECjeg4wxut8V7CwbTfZBH
        jWKS4wxut8XgBgNJKjLQ4uY0g9ttMbjBQJKOYzK4nWZwuy0GNxhIUvsTN5/TDG63xfsLBpJ07JYTJE6z
        z+22eH/BQJIalDos+TSD220xuMEgkhqU2rz9urSGtGvHlycYRNI3+Vpe5XXdtZPzAgwiqcBAJ4DzJD1j
        XTO+PMFAkhpX1pYGXpdUHbtmfHmCgaiUnI/Dk6+Lk29gIN2HeNRwHkUl10UxCQwiqUHpxyWc7/2S7jpK
        n7pewCCSlqe0ubnMmyXddZQ+db2AQSRVSjoW6TLVqby7jtJHZ3cYSFKDUg/7L2dLwHmxBQAGk9SgtJ4f
        cpmkbhCPjC0mMJjugzxquE4V4nTXUz5FoRIMxrFbFLO30zFrg8Ek3dQ0KL2N2VsfszYYkAalHJi99TFr
        gwE5dovnVE5+GUvdMCgNSnku6bSae0T1LQwo6WxBDUrvJ2lT/y2xzA2DUinJMbMvT3o/wcCSvqHrsXVf
        Nauv2XB3rdNTv7clbhiYBqWcMuvzN8/ZYHBJS08qJR9jtu0BviRBgO7DPWp4nFkGOAMbBEhacnKCxOOl
        D3AGNgihQSmXSh3gDGwQJKlS0n6k9dSzzZQqyvo99P+DMBqUcq1a0n6/pHstRkn9/KoiIZAGpdyi9oGN
        euh2/dz2sUGo7kM/athOLVOO0iqnfk5bRiCYY7e4p5oF1XPPvT6Lq5+rfj6zNQiXVPWmQel+/GPJ3k69
        qZ+nfi5gAhqU8kg1mGw5kzvM1AxqMBnHbrGWWiVYqzK3/h171mBiSQ1KfTsfQz3vqoGnlgnvVYBSf0/9
        ffX3ep4Gk6ubQHejGDG1/MSY6n1Ys+43S2oJsVYTnqcGrpf/W/139d/XnzOYAV9QKQlAnPr22w0UI0aD
        UgCe7K1U+5bUEhUAPC3ldQPFiFEpCcCTbpAYNQCgQSkAeZIalKqUBOBJUqVk/S4AoEEpAHk0KAUgTjdI
        jBoAiDp26/0SANCgFIA8GpQCEMexWwDE0aAUgCgalAIQR4NSAOJoUApAHA1KAYijUhKAON0gMWoAQINS
        APJoUApAHA1KAYijQSkAcTQoBSBON0iMGgDQoBSAPBqUAhBHg1IA4jh2C4A4GpQCEEWDUgDiaFAKQJzq
        e9YNFCNGg1IAnmhQCkAclZIAxOkGiVEDAE9l890gMWI0KAXgiQalAMTRoBSAOBqUAhDn3ZJuoBgxGpQC
        8KQbJEYNAGhQCkAeDUoBiKNSEoA4jt0CII4GpQBE0aAUgDgalAIQR4NSAOJoUApAHJWSAMTpBolRAwAa
        lAKQR4NSAOI4dguAOBqUAhBHg1IA4nSDxKgBAA1KAcijQSkAcVRKAhDHsVsAxNGgFIAoGpQCEEeDUgDi
        aFAKQBwNSgGIo1ISgDjdIDFqAECDUgDyaFAKQBzHbgEQR4NSAOJoUApAnG6QGDUAoEEpAHk0KAUgjkpJ
        AOI4dguAOBqUAhBFg1IA4mhQCkAcDUoBiKNBKQBxVEoCEKcbJEYNAGhQCkAeDUoBiOPYLQDiJDUorcOf
        AUCDUgDydIPEqAEADUoByJPUoLSeHQKASkkA8jh2C4A4GpQCECWpQWkFADQoBSCPBqUAxNGgFIA4KiUB
        iNMNEqOmimMAmJwGpQDE0aAUgDiO3QIgjgalAMTRoBSAON0gMWoAQINSAPJoUApAHJWSAMRx7BYAcTQo
        BSCKBqUAxNGgFIA4GpQCEEeDUgDiqJQEIE43SIwaDUoB0KAUgDwalAIQx7FbAMTRoBSAOBqUAhCnGyRG
        DQA8zXS6QWLEaFAKwBMNSgGIo1ISgDiO3QIgzocl3UAxYjQoBUCDUgDyaFAKQBwNSgGIUwNCN1CMGA1K
        AXiiUhKAON0gMWo0KAVAg1IA8qiUBCCOY7cAiKNBKQBxNCgFIE43SIwaANCgFIA8GpQCEEelJABxHLsF
        QBwNSgGIokEpAHEcuwVAHA1KAYijQSkAcVRKAhCnGyRGjQalAGhQCkAelZIAxHHsFgBxNCgFII4GpQDE
        6QaJUQMAGpQCkEeDUgDiqJQEII5jtwCIo0EpAFE0KAUgjmO3AIijQSkAcTQoBSCOSkkA4nSDxKjRoBQA
        DUoByKNSEoA4jt0CII4GpQDE0aAUgDjdIDFqAECDUgDyaFAKQByVkgDEcewWAHE0KAUgigalAMRx7BYA
        cZIalP66BAA0KAUgj0pJAOJ0g8So0aAUgKgGpX8sAQCVkgDkcewWAHE0KAUgTlKDUpWSADzpBolRAwAa
        lAKQR4NSAOKolAQgTtKxW98tAQANSgHIokEpAHEcuwVAHA1KAYijQSkAcTQoBSBON0iMGg1KAdCgFIA8
        KiUBiOPYLQDiaFAKQBwNSgGI0w0SowYANCgFII8GpQDEUSkJQBwNSgGIo0EpAFE0KAUgjmO3AIijQSkA
        cTQoBSCOBqUAxPnPkm6gGDEalAKgQSkAeVRKAhDHsVsAxKnS+W6gGDEalALwRINSAOJ0g8SoAQANSgHI
        U61huoFixGhQCsATlZIAxNGgFIA4GpQCEKcbJEYNADh2C4A8GpQCEEeDUgDiaFAKQBwNSgGIokEpAHFU
        SgIQx7FbAMTRoBSAOBqUAhCnGyRGDQBoUApAHg1KAYijUhKAOBqUAhBHg1IA4nSDxKgBAMduAZBHg1IA
        4mhQCkAcDUoBiKNBKQBRNCgFII5KSQDiOHYLgDgalAIQR4NSAOJ0g8SoAQANSgHIo0EpAHFUSgIQR4NS
        AOJoUApAnG6QGDUA4NgtAPJoUApAHA1KAYijQSkQqxo7fr3kxz/z+4vUjePl/3b4b+vPaQw5Lg1KgRh1
        E/h+yS9L7lUGXn9P/X3197rJjEGDUiBCDTxvl3Q3h3un/p3699gvlZLAsOrb+U9Ltlp+qn+3li9trt0f
        x24Bw6nBpJYJuxvBVqmfxyC3HxqUAsOo5101U9procBhJue53PY0KAWGUB/wUc4JrJ/TDWlb3esyaoBA
        NQuq52rdh37vqZ/bLG59SQ1KPy4BwtRNavTlpfr56/dgPRqUArtVN6iUTbj1e1imXI9KSWCXqjqs+6CP
        HlVv69CgFNid1IHtEAPc4yU1KLWkDQHSB7ZDDHCP1V3zUQMMbpaB7RAD3GM4dgvYjaTS7Utiyen+NCgF
        dqH2gaVURV6a+r3tg7uvpAalKiVhYIeearOmfn/uR4NSYHNJ+5FuiW/o95O0CmBWDwOa9TnbsXj+djsN
        SoHNzb4c+TKWJ2+nUhLY1Gxl/+fG9oDbJC1zV2EMMJikEyTumbouXE+DUmAzZm2n46Z2PQ1Kgc2YtZ2O
        2dv1uus5aoCBmLWdFyfBXy6p+laDUhiMCsnzonLychqUAptI2oO0Rup6cb6kSkmb+mEgSQfarpG6XpxP
        g1JgE0mVbGukrhfn06AUWF2dkdd9iOV0nC14vu76jRpgEEkP+9eM5anzOHYL2ERSj6014wim82hQCmwi
        6WH/mvEt/jwalAKb6D7Ecl54XdKXJ8duwSDsb7stikpep0EpsLqkh/1bxDf50zQoBTZhcLstBrfTkt5f
        nrHCQJKORdoiTio5TYNSYBMGt9uieu40DUqBTRjcbovB7bQ6Qb+7biPGEjQMxOB2Wwxux6WdfAMMxOB2
        WwxuxyW9tzQohcEY3G6Lwe24pM3bGpTCYAxut8VzmOOSNm/7EgODMbjdFoNbL+3kGx0gYDAGt9tSN3H+
        Lq2YRINSGIxebreFXlobJWAwSccjrR3HMR33bkl3zUaM1xkGZHC7PhpX9urk/O56jRqvMwzI4HZ9HMfU
        S1vqVikJAzK4XR/FJL20520qYmFQ3QdaTseJFcclPW+raFAKg+o+0HI62p/00p63aVAKA+s+1HI69j31
        6jlkd71GjUpJGNj7Jd0HW/rU9aKX1L+tYoYOA0s64HaNqJI8Luk8yYrXGgaW1FDy0alnMAoMerVU212z
        kaNSEgbmfMnzY8/TcWlbACrAwAxu58Ws7bS0LQC2e8DgbOQ+L2Ztx6W1uKloUAqDM7i9Ht/iT3uzpLtu
        I8eXGQjQfbjlcxQWnJa2JFnRoBQC1Myk+4CL5anXJC5JVmzUhwD2uvWpQV8RyWmJVZIVIEDqDerW+Pb+
        ug9Lums3chy7BSESCwJujdMpXpdajKRBKYRQMfllnCl4nrSzJA9RKQkh0lqV3BLf2s9T75m0syQPUR0L
        QeoEju6DPlMMbOdLa29ziJNoIMzsFZMGtssk7m2rKCaBMDOfMekZy2USOwAc4r0AYepEhu7DnpxagnIS
        xeVSC0kqnrdBmNmKSqqjtn1sl0t/n3jeBoFmOYbL0tP1kpevHZANodK7clexQJ2FyPVSy/8rioogVOpJ
        JfWN3LOU26WW/x9S738gUFoVXM3UHKN1P4nnSD6PZ7AQbPTN3PXz1/KSG9V9pc/a6n0DBBvxuVstO9Z5
        kMr6Hyd91qZvH4Tb83O3+nZdS411I6qqvRrMlG4/XvqsreJ5G4TbsrOyb8/7lD5rq6iihQlsud/NTGxf
        Zpi12d8Gk9iyM7fnZvsyw6xN/z6YxJbnTNpIux/Jp5E8jy9UMJHuJrBWLE1ur16D5NNIDrEFACaz5ZYA
        G6+3t+XS9JpRxAST2bKQwA1nW8n92l7GFymYTC1LdTeDtaI0ezu/L+lek8RYAocJbbk0qS3NNmYo/T/E
        CgFMassbXZWgs65ZikgOsSQJk9p6aVKJ9rpmKSKpVJWkJUmYWO07624Oa6Se/bCO6nfXvQapsZ8SJrfl
        hu6K1jWPVzOYGU4ieR6rAsDTEk53g1gjvmE/3i9LumufGmdJAk+2fhZjW8DjbD0z3yIqcYEnW7bBqZi9
        PcZs1ZGH+LIE/KWahHY3irXihnR/M23WPqTexwB/2Xpz79sl3M8sJ/6/jL1twN9s2cS0UuXq3G7G52wV
        hSRAa+tv+/a93a62Vsz4nK2ikARobX1iSeXNEq5Tr9+7Jd11TY8TSYCTtjyxpFKzDjep69Rzy+6azhAV
        t8BJW28LqCguudxsG7VfRrUt8KqtZ28Vxyedr5Zyu2s4S8zagLPs4ZBdy5Pnmak/27GYtQFn23pTd0X1
        5GkGNpu2gQvtpUWK8u6ege1T7I0ELraH2VvFDexLBrZP+W0JwMX2Mnur52/6vn1iYPscz9qAq+2hcrJS
        m5NnLzAxsH2OCkngJnvY93bIzAPcT0u6azJrzNqAm23dzPR5Zhvg6nedfYP2yygyAu6ibrB1dl93o9ki
        swxwNTuZ9azIY3GGJHBXezsFI32Aq2KeWU/3PxUHawN3935Jd8PZKjXAJVZR/rik+31nT73/AO5uL1sD
        nqdmNyn74Gqgtgx5PPY7Ag+zl60BL1OznZGZrZ2O0n/gofZWXPI8dRblaCXiNRsxWzsdRSTAKqodTXcT
        2kNqmfKfS/auBmEl/udF+yNgNXs5d/JYaja0x2c0BrXL4vxIYFV1k97r8uTz1FLlHga5KhYxqF0Wy5HA
        JkY667Bmct8vWVPdmOvfrAG2+5nkdCxHApupZaPuxrTX1DO5mkF9u+QRDgOaWdptsRwJbKpu5h+XdDeo
        EfJ2SZXhf73kmiWwWm6sgbIONlb1eJ/U+8lyJLC5eqbV3aRGTS0jVg4D3yE1gB3+vw9Luj8rt8dmbWA3
        6qT27kYlckmc+A/szt63B8i+4zkbsEujP3+T7eI5G7BrVWDR3bxEjqX2syV2dwDCjLT/TbZPvV8AhvDz
        ku5GJvI8CkiA4Yy2wVvWjTY2wJCqQGBv3btlH6n3hQISYFgGOHkZAxsQYZQOAvL4OOkfiFKl3ga4uaPk
        H4hkgJs3BjYgmgFuvhjYgCkY4OaJgQ2YigEuPwY2YEoGuNwY2ICp1TYB++CyUq9nva4AU7PROyc2aAO8
        UGcNdjdMGSPOigQ4ok6J726csu+8WQLACd8tUWgyRup1qtcLgDNUpZ3ncPtOvT4qIgEuVIUJnsPtM/W6
        KBwBuMEPSyxT7iP1OtTrAcAd1L6pfy/pbriyTur6278G8ABVlWcWt27qequGBHgws7j1YrYGsDLP4h6X
        uq5K/AE2UhV7Py/pbtByXep6qoQE2IFaOvttSXezlvNS188SJMAOfbPE87jLUterrhsAO2eQez0GNYBB
        1c3bKSdfpq6HQQ0gQD1LqkKJWasr6/eu398zNYBQtYVgliXL+j0dlwUwkZrF1Mkbad0H6vep38ssDWBy
        ow90NUMzoAFwVG1grtM5qvBir4Nd/Vz189XPacM1ABc7DHb/WlIzpI9LugHnUal/rzZY179vMAPgoaqc
        /jDoVSViDXzXDH41Czv82fp7DoOYcn0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBUX331P169
        egesMf49AAAAAElFTkSuQmCC
</value>
  </data>
</root>