<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMUAAAKACAYAAAAsMrwGAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAC/NJREFUeF7t3SsOYFUURNEeApbZgEFjGCAfwycomA2OhOAYAtz2ZbtOJayV7BGc
        Sp579wMAAAAAAAAAAAAAAAAAAAA837y+e/39+lefrH9ev76+fjHq89dvr3RAfdq+fzHms9cfr3Qwdfr2
        xZCfX+lQ6vbViwFfvtKB1O/HFwM+HiIdSP3+ejHgz1c6kG5iQDqM7mJAOozuYkA6jO5iQDqM7mJAOozu
        YkA6jO5iQDqM7mJAOozuYkA6jO5iQDqM7mJAOozuYkA6jO5iQDqM7mJAOozuYkA6jO5iQDqM7mJAOozu
        YkA6jO5iQDqM7mJAOozuYkA6jO5iQDqM7mJAOozuYkA6jO5iQDqM7mJAOozuYoDfZm7FgJ9e6Ti6iQFf
        vNJxdBMj/I5/J0Z43msnhnx8CPL3VzqUejHIk8G3QV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTU
        pSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEu
        BXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVp
        iEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtB
        XRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRri
        UlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCX
        hrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU
        1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUh
        LgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1
        aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhL
        QV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a
        4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQ
        l4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4
        FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSl
        IS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4F
        dWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmI
        S0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0Fd
        GuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJS
        UJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeG
        uBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTU
        pSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEu
        BXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVp
        iEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtB
        XRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRri
        UlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCX
        hrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU
        1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUh
        LgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1
        aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhL
        QV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a
        4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQ
        l4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4
        FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSl
        IS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4F
        dWmIS0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmI
        S0FdGuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0Fd
        GuJSUJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJS
        UJeGuBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeG
        uBTUpSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTU
        pSEuBXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEu
        BXVpiEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmIS0FdGuJSUJeGuBTUpSEuBXVp
        iEtBXRriUlCXhrgU1KUhLgV1aYhLQV0a4lJQl4a4FNSlIS4FdWmISzHom9d3r79f6Wj6tDHk89dvr3Qo
        9WLEZ68/XulI6saIn1/pQOrHgC9f6Ti6iQE/vdJxdBMD/nyl4+gmBqTD6C4GpMPoLgakw+guBqTD6C4G
        pMPoLgakw+guBqTD6C4GpMPoLgakw+guBqTD6C4GpMPoLgakw+guBqTD6C4GpMPoLgakw+guBqTD6C4G
        pMPoLgakw+guBqTD6C4GpMPoLgakw+guBqTD6C4GpMPoLgakw+guBqTD6C4GpMPoLgb4beZWDPjxlY6j
        fh9fj2LAF690IPX75cUIX4uNvnoxwvNe933/YszHhyB/f6WD6dP2w4thngzu9M/r19fXLwAAAAAAAAAA
        AAAAAAAAAP5XPnz4D2kz0LyctEBmAAAAAElFTkSuQmCC
</value>
  </data>
</root>